/**
 * @file   OLED12864.c
 * @author 早上坏 (star32349@outlook.com)
 * @brief  OLED显示屏模块的板级支持包（BSP）
 * @version 1.0
 * @date   2024/5/7
 * @see    http://t.csdnimg.cn/huaaY, http://t.csdnimg.cn/IEsBm
 * @link   https://github.com/NGC2237plus/OLED12864
 * @endlink
 */
#include "oled.h"

#ifndef __IDF_I2C
#define IICx hi2c1
#else
i2c_master_dev_handle_t dev_handle;
#endif


// uint8_t OLED_RAM[8][128];	   /*!< 定义GDDRAM缓存区，为了快速响应，提高刷新速度，本程序未使用缓冲区，原理与下方的图片显示相同 */

/**
 * @brief 6*8 ascll字符
 *
 */
const uint8_t ASCLL_6x8[][6] =
	{
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*!< sp */
		0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, /*!< ! */
		0x00, 0x00, 0x07, 0x00, 0x07, 0x00, /*!< " */
		0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14, /*!< # */
		0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12, /*!< $ */
		0x00, 0x23, 0x13, 0x08, 0x64, 0x62, /*!< % */
		0x00, 0x36, 0x49, 0x55, 0x22, 0x50, /*!< & */
		0x00, 0x00, 0x05, 0x03, 0x00, 0x00, /*!< ' */
		0x00, 0x00, 0x1c, 0x22, 0x41, 0x00, /*!< ( */
		0x00, 0x00, 0x41, 0x22, 0x1c, 0x00, /*!< ) */
		0x00, 0x14, 0x08, 0x3E, 0x08, 0x14, /*!< * */
		0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, /*!< + */
		0x00, 0x00, 0x00, 0xA0, 0x60, 0x00, /*!< , */
		0x00, 0x08, 0x08, 0x08, 0x08, 0x08, /*!< - */
		0x00, 0x00, 0x60, 0x60, 0x00, 0x00, /*!< . */
		0x00, 0x20, 0x10, 0x08, 0x04, 0x02, /*!< / */
		0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E, /*!< 0 */
		0x00, 0x00, 0x42, 0x7F, 0x40, 0x00, /*!< 1 */
		0x00, 0x42, 0x61, 0x51, 0x49, 0x46, /*!< 2 */
		0x00, 0x21, 0x41, 0x45, 0x4B, 0x31, /*!< 3 */
		0x00, 0x18, 0x14, 0x12, 0x7F, 0x10, /*!< 4 */
		0x00, 0x27, 0x45, 0x45, 0x45, 0x39, /*!< 5 */
		0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30, /*!< 6 */
		0x00, 0x01, 0x71, 0x09, 0x05, 0x03, /*!< 7 */
		0x00, 0x36, 0x49, 0x49, 0x49, 0x36, /*!< 8 */
		0x00, 0x06, 0x49, 0x49, 0x29, 0x1E, /*!< 9 */
		0x00, 0x00, 0x36, 0x36, 0x00, 0x00, /*!< : */
		0x00, 0x00, 0x56, 0x36, 0x00, 0x00, /*!< ; */
		0x00, 0x08, 0x14, 0x22, 0x41, 0x00, /*!< < */
		0x00, 0x14, 0x14, 0x14, 0x14, 0x14, /*!< = */
		0x00, 0x00, 0x41, 0x22, 0x14, 0x08, /*!< > */
		0x00, 0x02, 0x01, 0x51, 0x09, 0x06, /*!< ? */
		0x00, 0x32, 0x49, 0x59, 0x51, 0x3E, /*!< @ */
		0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C, /*!< A */
		0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, /*!< B */
		0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, /*!< C */
		0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C, /*!< D */
		0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, /*!< E */
		0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, /*!< F */
		0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A, /*!< G */
		0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, /*!< H */
		0x00, 0x00, 0x41, 0x7F, 0x41, 0x00, /*!< I */
		0x00, 0x20, 0x40, 0x41, 0x3F, 0x01, /*!< J */
		0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, /*!< K */
		0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, /*!< L */
		0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, /*!< M */
		0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F, /*!< N */
		0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, /*!< O */
		0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, /*!< P */
		0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E, /*!< Q */
		0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, /*!< R */
		0x00, 0x46, 0x49, 0x49, 0x49, 0x31, /*!< S */
		0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, /*!< T */
		0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, /*!< U */
		0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, /*!< V */
		0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F, /*!< W */
		0x00, 0x63, 0x14, 0x08, 0x14, 0x63, /*!< X */
		0x00, 0x07, 0x08, 0x70, 0x08, 0x07, /*!< Y */
		0x00, 0x61, 0x51, 0x49, 0x45, 0x43, /*!< Z */
		0x00, 0x00, 0x7F, 0x41, 0x41, 0x00, /*!< [ */
		0x00, 0x02, 0x04, 0x08, 0x10, 0x20, /*!< \ */
		0x00, 0x00, 0x41, 0x41, 0x7F, 0x00, /*!< ] */
		0x00, 0x04, 0x02, 0x01, 0x02, 0x04, /*!< ^ */
		0x00, 0x40, 0x40, 0x40, 0x40, 0x40, /*!< _ */
		0x00, 0x00, 0x01, 0x02, 0x04, 0x00, /*!< ' */
		0x00, 0x20, 0x54, 0x54, 0x54, 0x78, /*!< a */
		0x00, 0x7F, 0x48, 0x44, 0x44, 0x38, /*!< b */
		0x00, 0x38, 0x44, 0x44, 0x44, 0x20, /*!< c */
		0x00, 0x38, 0x44, 0x44, 0x48, 0x7F, /*!< d */
		0x00, 0x38, 0x54, 0x54, 0x54, 0x18, /*!< e */
		0x00, 0x08, 0x7E, 0x09, 0x01, 0x02, /*!< f */
		0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, /*!< g */
		0x00, 0x7F, 0x08, 0x04, 0x04, 0x78, /*!< h */
		0x00, 0x00, 0x44, 0x7D, 0x40, 0x00, /*!< i */
		0x00, 0x40, 0x80, 0x84, 0x7D, 0x00, /*!< j */
		0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, /*!< k */
		0x00, 0x00, 0x41, 0x7F, 0x40, 0x00, /*!< l */
		0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, /*!< m */
		0x00, 0x7C, 0x08, 0x04, 0x04, 0x78, /*!< n */
		0x00, 0x38, 0x44, 0x44, 0x44, 0x38, /*!< o */
		0x00, 0xFC, 0x24, 0x24, 0x24, 0x18, /*!< p */
		0x00, 0x18, 0x24, 0x24, 0x18, 0xFC, /*!< q */
		0x00, 0x7C, 0x08, 0x04, 0x04, 0x08, /*!< r */
		0x00, 0x48, 0x54, 0x54, 0x54, 0x20, /*!< s */
		0x00, 0x04, 0x3F, 0x44, 0x40, 0x20, /*!< t */
		0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C, /*!< u */
		0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, /*!< v */
		0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, /*!< w */
		0x00, 0x44, 0x28, 0x10, 0x28, 0x44, /*!< x */
		0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C, /*!< y */
		0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, /*!< z */
		0x00, 0x00, 0x08, 0x7F, 0x41, 0x00, /*!< { */
		0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, /*!< | */
		0x00, 0x00, 0x41, 0x7F, 0x08, 0x00, /*!< } */
		0x00, 0x10, 0x08, 0x18, 0x10, 0x08, /*!< ~ */
};
/**
 * @brief  OLED屏幕初始化
 * @warning 使用OLED前必须调用该函数初始化
 * @retval 无
 */
void OLED_Init(void)
{
#ifdef __IDF_I2C
    i2c_device_config_t i2c_salve_conf = {
        .dev_addr_length = I2C_ADDR_BIT_LEN_7,
        .device_address = OLED_ADD >> 1,
        .scl_speed_hz = 400000,
        .scl_wait_us = 500000,
        .flags = {.disable_ack_check = false},
    };
    ESP_ERROR_CHECK(i2c_master_bus_add_device(i2c_bus_handle, &i2c_salve_conf, &dev_handle));
#endif
	WriteCmd(0xAE); // 关闭显示
	WriteCmd(0x20); // 设置存储器地址模式
	WriteCmd(0x10); // 00,水平地址模式;01,垂直地址模式;10,页面地址模式 (重置);11,无效
	WriteCmd(0xb0); // 设置页面地址模式的页面起始地址,0-7
	WriteCmd(0xc8); // 设置COM输出扫描方向
	WriteCmd(0x02); // ---设置低列地址
	WriteCmd(0x10); // ---设置高列地址
	WriteCmd(0x40); //--设置起始行地址
	WriteCmd(0x81); //--设置对比度控制寄存器
	WriteCmd(0xff); // 对比度范围 0x00~0xff
	WriteCmd(0xa1); //--设置段重映射 0到127
	WriteCmd(0xa6); //--设置正常显示
	WriteCmd(0xa8); //--设置复用比率(1到64)
	WriteCmd(0x3F); //
	WriteCmd(0xa4); // 0xa4,输出跟随RAM内容;0xa5,输出忽略RAM内容
	WriteCmd(0xd3); //-设置显示偏移
	WriteCmd(0x00); //-无偏移
	WriteCmd(0xd5); //--设置显示时钟分频比/振荡器频率
	WriteCmd(0xf0); //--设置分频比
	WriteCmd(0xd9); //--设置预充电周期
	WriteCmd(0x22); //
	WriteCmd(0xda); //--设置COM引脚硬件配置
	WriteCmd(0x12);
	WriteCmd(0xdb); //--设置VCOMH
	WriteCmd(0x20); // 0x20,0.77xVcc
	WriteCmd(0x8d); //--设置DC-DC启用
	WriteCmd(0x14); //
	WriteCmd(0xaf); //--打开OLED面板
}

/**
 * @brief 写命令
 * @retval 无
 */
void WriteCmd(uint8_t IIC_Command)
{
	HAL_I2C_WriteByte(OLED_COM, IIC_Command);
}

/**
 * @brief 写数据
 * @retval 无
 */
void WriteDat(uint8_t IIC_Data)
{
	HAL_I2C_WriteByte(OLED_DAT, IIC_Data);
}

/**
 * @brief IIC发送
 * @retval 无
 */
void HAL_I2C_WriteByte(uint8_t addr, uint8_t data)
{
	uint8_t TxData[2] = {addr, data};
#ifdef __IDF_I2C 
i2c_master_transmit(dev_handle,TxData,2,10);
#else
	HAL_I2C_Master_Transmit(&IICx, OLED_ADD, (uint8_t *)TxData, 2, 10);
#endif
}

/**
 * @brief 设置起点坐标,左上角为（0，0）
 * @param x 横坐标，0 <= x <= 127
 * @param y 竖坐标，0 <= y <= 7
 * @retval
 */
void SetStart(uint8_t x, uint8_t y)
{
	WriteCmd(0xb0 + y);
	x += 2;
	WriteCmd((x & 0xf0) >> 4 | 0x10); // 取高位
	WriteCmd(((x & 0x0f)));			  // 取低位
}

/**
 * @brief 全屏填充
 * @param Fill_Data 需要填充的数据，0x00~0xff
 * @retval 无
 */
void OLED_Fill(uint8_t Fill_Data)
{
	uint8_t m, n;
	for (m = 0; m < OLED_HEIGHT / 8; m++)
	{
		SetStart(0, m);
		for (n = 0; n < OLED_WIDTH; n++)
		{
			HAL_I2C_WriteByte(OLED_DAT, Fill_Data);
		}
	}
}

/**
 * @brief 打开OLED
 * @retval 无
 */
void OLED_ON(void)
{
	WriteCmd(0X8D); // 设置电荷泵
	WriteCmd(0X14); // 开启电荷泵
	WriteCmd(0XAF); // OLED唤醒
}

/**
 * @brief 关闭OLED
 * @retval 无
 */
void OLED_OFF(void)
{
	WriteCmd(0X8D); // 设置电荷泵
	WriteCmd(0X10); // 关闭电荷泵
	WriteCmd(0XAE); // 关闭OLED
}

/**
 * @brief 单个字符显示
 * @note 本程序中字体大小6*8，所以128的宽度只能显示21个字符，64的高度只能显示8个字符，且位置固定，需要任意坐标自行设计
 * @param x 横坐标，0 <= x <= 20
 * @param y 竖坐标，0 <= y <= 7
 * @param c 字符
 * @retval 无
 */
void Display_Char(uint8_t x, uint8_t y, char c)
{
	uint8_t i;
	SetStart(x * 6, y);
	for (i = 0; i < 6; i++)
	{
		HAL_I2C_WriteByte(OLED_DAT, ASCLL_6x8[c - 32][i]);
	}
}

/**
 * @brief 字符串显示
 * @note 本程序中字体大小6*8，所以128的宽度只能显示21个字符，超过自动换行
 * 	64的高度只能显示8个字符，且位置固定，需要任意坐标自行设计
 * @param x 横坐标，0 <= x <= 20
 * @param y 竖坐标，0 <= y <= 7
 * @param str 字符串
 * @retval 无
 */
void Display_Str(uint8_t x, uint8_t y, char *str)
{
	uint8_t i = 0;
	while (str[i] != '\0')
	{
		Display_Char(x, y, str[i]);
		x++;
		i++;
		if (x >= 21)
		{
			y++;
			x = 0;
		}
	}
}

/**
 * @brief 图片全屏显示
 * @param img 图片数组，大小8*128
 * @param mode 显示模式：mode=0，值为1的像素点显示黑色，值为0的像素点显示白色
 * 					 mode=1，值为1的像素点显示白色，值为0的像素点显示黑色
 * @retval 无
 */
void Display_IMG(const uint8_t (*img)[128], uint8_t mode)
{
	uint8_t i, j;
	for (i = 0; i < OLED_HEIGHT / 8; i++)
	{
		for (j = 0; j < OLED_WIDTH; j++)
		{
			SetStart(j, i);
			if (mode)
				HAL_I2C_WriteByte(OLED_DAT, img[i][j]);
			else
				HAL_I2C_WriteByte(OLED_DAT, ~img[i][j]);
		}
	}
}

/****************************/
/*下方为测试部分，在main中调用就行，可以测试自己的硬件或连线是否正确 */
const uint8_t yuanshen[8][128] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFF, 0xFF, 0xFE, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x02, 0xE2, 0xE2, 0xE2, 0xC2, 0xC2, 0xC2, 0x42, 0x42, 0x42, 0x5A, 0x7E, 0x7E, 0x7A, 0x42, 0x42, 0x42, 0x42, 0xC2, 0xE2, 0xE2, 0xE2, 0xC2, 0x82, 0x02, 0x02, 0x42, 0x42, 0x42, 0x42, 0x43, 0x47, 0xCF, 0xFF, 0xDF, 0xC7, 0xE3, 0xF2, 0xE2, 0xC0, 0x80, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC2, 0x42, 0x47, 0x47, 0x4F, 0xFF, 0xFF, 0xDF, 0x47, 0x47, 0x43, 0x42, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x88, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xF3, 0xF3, 0xF3, 0xF3, 0x00, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x38, 0x38, 0x7C, 0xFE, 0xFF, 0xFF, 0xFF, 0x7C, 0x38, 0x38, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0xC1, 0xC0, 0xE0, 0xE3, 0xE3, 0xF3, 0xF3, 0xF1, 0x61, 0x41, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x41, 0x61, 0x73, 0xF3, 0xF3, 0xF3, 0xE3, 0xE0, 0xE0, 0xC0, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x1F, 0x1F, 0x0F, 0x03, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x1F, 0x0F, 0x04, 0x84, 0x84, 0xC4, 0xE4, 0xFF, 0xFF, 0xE5, 0xC4, 0x84, 0x84, 0x04, 0x07, 0x1F, 0x1F, 0x3F, 0x3F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x06, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x3F, 0x1F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x3F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x0F, 0x7F, 0xFF, 0xFF, 0xFF, 0x1F, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	/*屏幕截图 2024-05-02 230304 - 副本(1).png,0*/
	/* (128 X 64 , 宋体 ) */
};
/**
 * @brief 图片显示测试
 *
 */
void OLED_IMGtest(void)
{
	OLED_Init();
	OLED_Fill(0x00);
	Display_IMG(yuanshen, 0);
}
/**
 * @brief 字符显示测试
 *
 */
void OLED_CHARtest(void)
{
	OLED_Init();
	OLED_Fill(0x00);
	char test_str[] = "Hello World";
	Display_Str(0, 0, test_str);
}